{"version":3,"sources":["NotFound.js","SingleAdUnit.js","QuizMain.js","App.js","index.js"],"names":["NotFound","render","staticContext","status","className","href","process","REACT_APP_API_BASEPATH","GPT","enableSingleRequest","SingleAdUnit","id","adUnitPath","slotSize","QuizMain","history","useHistory","useState","hideBreadcrumb","setHideBreadcrumb","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","answered","setAnswered","clicked","setClicked","answeredCount","setAnsweredCount","ansToggle","setAnsToggle","useEffect","querystring","URLSearchParams","window","location","search","get","split","pop","includes","replace","ReactGa","initialize","pageview","AnswerButtonNew","answerOption","chkvarient","indexOf","map","v","qtnindex","ansindex","index","Button","onClick","setTimeout","handleAnswerOptionClick","disabled","length","variant","reload","i","key","type","name","nextQuestion","push","parseInt","isMobile","event","category","action","label","BreadcrumbQuiz","Breadcrumb","Item","active","App","Container","style","backgroundImage","backgroundSize","basename","exact","path","component","require","config","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1065fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nconst NotFound = () => {\n    return (\n        <Route render={({ staticContext }) => {\n            if (staticContext) {\n                staticContext.status = 404;\n            }\n            return (\n                <div className=\"d-flex align-items-center justify-content-center text-white flex-column\">\n                    <h1>404 : Not Found</h1>\n                    <span>Go <a href={process.env.REACT_APP_API_BASEPATH}>HOME</a></span>\n                </div>\n            )\n        }} />\n    );\n};\n\nexport default NotFound;","import React from \"react\";\nimport { Bling as GPT } from \"react-gpt\";\n\nGPT.enableSingleRequest();\n\nconst SingleAdUnit = () => {\n    return (\n        <>\n            <div id=\"div-gpt-ad-1501582186001-5\" className=\"d-none d-md-block text-center\">\n                <GPT\n                    adUnitPath=\"/1008496/mykhel-eng-home-728x90\"\n                    slotSize={[728, 90]}\n                />\n            </div>\n            <div id=\"div-gpt-ad-1501582186001-0\" className=\"d-block d-sm-none text-center\">\n                <GPT\n                    adUnitPath=\"/1008496/mykhel-eng-home-300x250\"\n                    slotSize={[300, 250]}\n                />\n            </div>\n        </>\n    );\n}\nexport default SingleAdUnit;","import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport ReactGa from 'react-ga';\nimport SingleAdUnit from \"./SingleAdUnit\";\nimport { isMobile } from 'react-device-detect';\nconst QuizMain = () => {\n    let history = useHistory();\n    const [hideBreadcrumb, setHideBreadcrumb] = useState(false);\n    const questions = [\n        {\n            questionText: 'Who won India\\'s first individual medal ?',\n            answerOptions: [\n                { answerText: 'KD Jadhav', isCorrect: true },\n                { answerText: 'Leander Paes', isCorrect: false },\n                { answerText: 'Karnam Malleswari', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who won India its only medal in tennis ?',\n            answerOptions: [\n                { answerText: 'Ramesh Krishnan', isCorrect: false },\n                { answerText: 'Leander Paes', isCorrect: true },\n                { answerText: 'Somdev Devvarman', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'How many times has Indian men won hockey gold?',\n            answerOptions: [\n                { answerText: '5', isCorrect: false },\n                { answerText: '7', isCorrect: false },\n                { answerText: '8', isCorrect: true },\n            ],\n        },\n        {\n            questionText: 'When was the last time India won hockey gold?',\n            answerOptions: [\n                { answerText: '1952 Helsinki', isCorrect: false },\n                { answerText: '1980 Moscow', isCorrect: true },\n                { answerText: '1996 Atlanta', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who is the first Indian woman weightlifter to win a medal?',\n            answerOptions: [\n                { answerText: 'PV Sindhu', isCorrect: false },\n                { answerText: 'Saina Nehwal', isCorrect: false },\n                { answerText: 'Karnam Malleswari', isCorrect: true }\n            ],\n        },\n        {\n            questionText: 'Which year did India win its first medal in shooting?',\n            answerOptions: [\n                { answerText: '2004 Athens', isCorrect: true },\n                { answerText: '2008 Beijing', isCorrect: false },\n                { answerText: '2012 London', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who is the first Indian woman wrestler to win a medal?',\n            answerOptions: [\n                { answerText: 'Vinesh Phogat', isCorrect: false },\n                { answerText: 'Sakshi Malik', isCorrect: true },\n                { answerText: 'Divya Kakran', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'In which Olympics did India win maximum medals?',\n            answerOptions: [\n                { answerText: '1980 Moscow', isCorrect: false },\n                { answerText: '2000 Sydney', isCorrect: false },\n                { answerText: '2012 London', isCorrect: true }\n            ],\n        },\n        {\n            questionText: 'Who won India its first individual gold medal?',\n            answerOptions: [\n                { answerText: 'Milkha Singh', isCorrect: false },\n                { answerText: 'Abhinav Bindra', isCorrect: true },\n                { answerText: 'Rajyavardhan Singh Rathore', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who won India its first medal in boxing?',\n            answerOptions: [\n                { answerText: 'Akhil Kumar', isCorrect: false },\n                { answerText: 'Vijender Singh', isCorrect: true },\n                { answerText: 'Vikas Kishan', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Cricket was part of which Olympics?',\n            answerOptions: [\n                { answerText: '1896', isCorrect: false },\n                { answerText: '1900', isCorrect: true },\n                { answerText: '1936', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who was the first mascot of Summer Games?',\n            answerOptions: [\n                { answerText: 'Waldi 1972 Munich', isCorrect: true },\n                { answerText: 'Amik 1976 Montreal', isCorrect: false },\n                { answerText: 'Misha 1980 Moscow', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Who is the founder of modern Games?',\n            answerOptions: [\n                { answerText: 'Pierre de Coubertin', isCorrect: true },\n                { answerText: 'Jesse Owens', isCorrect: false },\n                { answerText: 'Carl Lewis', isCorrect: false }\n            ],\n        },\n        {\n            questionText: 'Which woman has won maximum medals?',\n            answerOptions: [\n                { answerText: 'Jackie Joyner Kersee', isCorrect: false },\n                { answerText: 'Nadia Comaneci', isCorrect: false },\n                { answerText: 'Larisa Latynina', isCorrect: true }\n            ],\n        },\n        {\n            questionText: 'How many times Olympics has been cancelled?',\n            answerOptions: [\n                { answerText: 'Never', isCorrect: false },\n                { answerText: '3 times', isCorrect: false },\n                { answerText: '5 times', isCorrect: true }\n            ],\n        },\n    ];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [score, setScore] = useState(0);\n    const [answered, setAnswered] = useState([]);\n    const [clicked, setClicked] = useState([]);\n    const [answeredCount, setAnsweredCount] = useState(0);\n    const [ansToggle, setAnsToggle] = useState(false);\n    useEffect(function () {\n        let querystring = new URLSearchParams(window.location.search);\n        if (querystring.get('is_iframe')) {\n            setHideBreadcrumb(true);\n        }\n\n        if (window.location.href.split('/').pop().includes('#')) {\n\n            if (querystring.get('is_iframe')) {\n                window.location.href = window.location.href.replace(window.location.href.split('/').pop(), '') + \"?is_iframe=1\";\n            } else {\n                window.location.href = window.location.href.replace(window.location.href.split('/').pop(), '');\n            }\n        }\n        //window.location = window.location.pathname;\n    }, []);\n    useEffect(function () {\n        ReactGa.initialize('UA-110466-78');\n    }, []);\n\n    useEffect(function () {\n        ReactGa.pageview(window.location.href);\n    }, [currentQuestion, showScore]);\n\n    const handleAnswerOptionClick = (answerOption) => {\n        setClicked([...clicked, { qtnindex: currentQuestion, ansindex: answerOption.index }]);\n        if (answerOption.isCorrect) {\n            setScore(score + 1);\n        }\n        setAnsToggle(true);\n        setTimeout(function () {\n            setAnsweredCount(answeredCount + 1);\n            setAnswered([...answered, currentQuestion]);\n        }, 300);\n    };\n\n\n    const AnswerButtonNew = (answerOption) => {\n        let opind = ['A', 'B', 'C', 'D'];\n        let chkvarient = \"\";\n        if (answered.indexOf(currentQuestion) > -1) {\n            if (answerOption.isCorrect) {\n                chkvarient = \"correct\";\n            } else {\n                clicked.map(v => {\n                    if (v.qtnindex === currentQuestion) {\n                        if (v.ansindex === answerOption.index) {\n                            chkvarient = \"wrong\"\n                        }\n                    }\n                });\n            }\n\n        } else {\n            chkvarient = \"\"\n        }\n        return (\n            <li className={chkvarient}><div className=\"w-100 mt-3\">\n                <div className=\"option1\">\n                    <div className=\"left-option\">\n                        {opind[answerOption.index]}\n                    </div>\n\n                    <Button className=\"m-0 p-3 w-100 right-option\" onClick={() => handleAnswerOptionClick(answerOption)} disabled={(answered.indexOf(currentQuestion) > -1) ? \"disabled\" : \"\"}> {answerOption.answerText} </Button>\n\n                </div>\n            </div>\n            </li>\n        )\n    }\n    const gotoNextQuestion = () => {\n        if (ansToggle) {\n            const nextQuestion = currentQuestion + 1;\n            if (nextQuestion < questions.length) {\n                setCurrentQuestion(nextQuestion);\n                if (hideBreadcrumb) {\n                    history.push(\"/?is_iframe=1#\" + parseInt(nextQuestion + 1));\n                } else {\n                    history.push(\"/#\" + parseInt(nextQuestion + 1));\n                }\n\n                if (nextQuestion == 1) {\n                    if (isMobile) {\n                        ReactGa.event({\n                            category: 'Olympics Quiz',\n                            action: 'OlympicsSplPage1',\n                            label: 'Mobile Start'\n                        });\n                    } else {\n                        ReactGa.event({\n                            category: 'Olympics Quiz',\n                            action: 'OlympicsSplPage1',\n                            label: 'Desktop Start'\n                        });\n                    }\n                }\n\n            } else {\n                setShowScore(true);\n                if (isMobile) {\n                    ReactGa.event({\n                        category: 'Olympics Quiz',\n                        action: 'OlympicsSplPage1',\n                        label: 'Mobile End'\n                    });\n                } else {\n                    ReactGa.event({\n                        category: 'Olympics Quiz',\n                        action: 'OlympicsSplPage1',\n                        label: 'Desktop End'\n                    });\n                }\n            }\n            setAnsToggle(false);\n        }\n    }\n\n    return (\n\n        <>\n            <div className='row w-100 text-white'>\n                {!hideBreadcrumb ? <SingleAdUnit /> : <></>}\n                <div className='col-md-2'></div>\n                <div className='main col-md-8 d-flex align-items-center justify-content-center'>\n                    <h1 className=\"text-center\">Quiz About The Olympic Games</h1>\n                    {/* <div className=\"d-none d-md-block\">Desktop</div>\n                    <div className=\"d-block d-sm-none\">Mobile</div> */}\n                    {showScore ? (<>\n                        <div className='col-md-12 text-center mt-4 oidw-quiz-block d-flex align-items-center justify-content-center flex-column'>\n                            <h2 className=\"\">You scored {score} out of {questions.length}</h2>\n                            <h2><Button variant=\"link\" onClick={() => { window.location.reload(); }}>Play Again</Button></h2>\n\n                        </div>\n                    </>) : (<>\n                        <div className=\"col-md-12 oidw-quiz-block mt-4 p-4\">\n                            <div className='mb-2'>\n                                <div className='col-md-12 oidw-quiz-no d-flex flex-row'>\n                                    <div className=\"col-md-2 text-center\"><i>{currentQuestion + 1}</i></div>\n                                    <div className='question col-md-10'>Q. {questions[currentQuestion].questionText}</div>\n                                </div>\n                            </div>\n                            <div className='col-md-12 options mb-5'>\n                                <ul>\n                                    {questions[currentQuestion].answerOptions.map((answerOption, i) => (\n                                        <AnswerButtonNew index={i} {...answerOption} key={i} />\n                                    ))}\n                                </ul>\n                            </div>\n                            <div className=\"option-bottom clearfix nextques\">\n                                <div className=\"next-question\">\n                                    <button type=\"button\" name=\"button\" onClick={gotoNextQuestion}>\n                                        {currentQuestion + 1 < questions.length ? <>\n                                            Next Question <span className=\"oidw-arrow-right\"></span></> : <> Finish </>}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </>)}\n                </div>\n                <div className='col-md-2'></div>\n            </div>\n        </>\n\n    );\n}\nexport default QuizMain;\n","import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Breadcrumb } from 'react-bootstrap';\nimport ReactGa from 'react-ga';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport QuizMain from './QuizMain';\nconst BreadcrumbQuiz = () => {\n    return (\n        <Breadcrumb>\n            <Breadcrumb.Item href=\"https://www.mykhel.com/\">Home</Breadcrumb.Item>\n            <Breadcrumb.Item active>Olympics Quiz</Breadcrumb.Item>\n        </Breadcrumb>\n    );\n}\n\nexport default function App() {\n\n    useEffect(function () {\n        ReactGa.initialize('UA-110466-78');\n        ReactGa.pageview(window.location.href);\n    }, []);\n\n    useEffect(function () {\n        let querystring = new URLSearchParams(window.location.search);\n        if (querystring.get('is_iframe')) {\n            setHideBreadcrumb(true);\n        }\n    }, []);\n    const [hideBreadcrumb, setHideBreadcrumb] = useState(false);\n    return (\n        <>{!hideBreadcrumb ? <Container className=\"p-0\">\n            <BreadcrumbQuiz />\n        </Container> : <></>}\n\n            <Container className=\"containerMain  mb-md-4 pb-5\" style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + '/quiz-video-bg.jpg' + \")\", backgroundSize: \"cover\" }}>\n                <Router basename='olympics-quiz'>\n                    <Switch>\n                        <Route exact path=\"/\" component={QuizMain} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Router>\n            </Container>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './quiz.css';\nimport App from './App';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}